<!-- Page Header Start -->
@model Room

<div class="container-fluid page-header mb-5 p-0" style="background-image: url(/img/carousel-1.jpg);">
    <div class="container-fluid page-header-inner py-5">
        <div class="container text-center pb-5">
            <h1 class="display-3 text-white mb-3 animated slideInDown">Rooms</h1>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb justify-content-center text-uppercase">
                    <li class="breadcrumb-item"><a href="#">Home</a></li>
                    <li class="breadcrumb-item"><a href="#">Pages</a></li>
                    <li class="breadcrumb-item"><a href="#">Rooms</a></li>
                    <li class="breadcrumb-item text-white active" aria-current="page">Details</li>
                </ol>
            </nav>
        </div>
    </div>
</div>
<!-- Page Header End -->
<style>
    .card {
        border: 2px solid transparent; /* Default border */
        cursor: pointer;
        width:150px;
    }

        .card.selected {
            border: 2px solid #dfa974;
        }
</style>
<!-- Room Details Section Begin -->
<section class="room-details-section spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-8">
                <div class="room-details-item">
                    <div style="height:400px" class="room-img-container">
                        <img style="max-height:100%;object-fit:cover; object-position:center center" src="~/img/@Model.Image" alt=""  /> 
                    </div>
                    <div class="rd-text">
                        <div class="rd-title">
                            <h3>@Model.Name</h3>
                            <div class="rdt-right">
        
                                <h2>@(Model.PricePerNight)$<span>/Night</span></h2>
                            </div>
                        </div>
                        <div class="hotel-data">
                            <h4>@Model.Hotel.Name  |  </h4>
                            <p> @(Model.Hotel.Country), @(Model.Hotel.City) </p>
                        </div>
                        <hr />

                        <table>
                            <tbody>
                                <tr>
                                    <td class="r-o">Category:</td>
                                    <td>@Model.RoomCategory.Name</td>
                                </tr>
                                <tr>
                                    <td class="r-o">Bed:</td>
                                    <td>@Model.NumOfBeds Beds</td>
                                </tr>
                            </tbody>
                        </table>
                        <p class="f-para">
                             @Model.Description
                        </p>
                    </div>
                </div>
            </div>
            <div class="col-lg-4">
                <div class="room-booking">
                    <h3>Your Reservation</h3>
                    <form action="#">
                        <div class="check-date">
                            <label for="date-in">Check In:</label>
                            <input type="date" class="date-input text-muted" id="date-in">
                        </div>
                        <div class="check-date">
                            <label for="date-out">Check Out:</label>
                            <input type="date" class="date-input text-muted" id="date-out">
                        </div>
                        <div class="select-option">
                            <label for="room">Rooms Amount:</label>
                            <select class="form-select text-muted" id="room">
                                <option value="1">1 Room</option>
                                <option value="2">2 Rooms</option>
                                <option value="3">3 Rooms</option>
                                <option value="4">4 Rooms</option>
                                <option value="5">5 Rooms</option>
                            </select>
                        </div>
                        <div>
                            <input type="checkbox" class="form-check-input" />
                            <label>include food</label>
                        </div>
                        <div class="food-details">

                            <div class="card mb-3" onclick="toggleSelection(this)">
                                <div style="height:120px">
                                    <img style="max-height:100%;max-width:100%;object-fit:cover;object-position:center center" src="~/img/team-1.jpg" />
                                </div>
                                <div class="card-body">
                                    <h6 class="card-title">Oceanfront Bistro</h6>
                                    <p class="card-text">15$/person</p>
                                </div>
                                <!-- Hidden checkbox -->
                                <input type="checkbox" class="form-check-input" style="display: none;">
                            </div>
                        </div>
                     
                        <span>error</span>

                        <button id="check-availablility-btn" >Check Availability</button>
                    </form>
                    
                </div>
            </div>
        </div>
    </div>
</section>

<script>
    let availBtn = document.getElementById("check-availablility-btn");
    let startdate = document.getElementById("date-in");
    let enddate = document.getElementById("date-out");
    let amount = document.getElementById("room");
    availBtn.addEventListener("click", (e) => {
        e.preventDefault();

        // Construct the URL with query parameters
        const url = `/room/checkRoomAvailable/${@Model.Id}?amount=${amount.value}&startDate=${startdate.value}&endDate=${enddate.value}`;
        console.log(url);
        // Make the fetch request
        fetch(url)
            .then(response => {
                // Check if the response is successful (status code 200)
                if (response.ok) {
                    // Parse the JSON response
                    return response.json();
                } else {
                    // If response is not successful, throw an error
                    throw new Error('Network response was not ok.');
                }
            })
            .then(data => {
                if (data && typeof data.data === 'boolean') {
                    // Use the 'data' property to determine availability
                    if (data.data) {
                        console.log("Room is available");
                        availBtn.innerHTML="room is available !"
                        availBtn.style = "background-color:Green;color:white";
                    } else {
                        console.log("Room is not available");
                    }
                } else {
                    console.log("Invalid response from server");
                }
            })
            .catch(error => {
                // Handle any errors
                console.error('Error:', error);
            });
    });
    function toggleSelection(card) {
        // Toggle 'selected' class on card
        $(card).toggleClass('selected');

        // Toggle checkbox state
        var checkbox = $(card).find('.form-check-input');
        checkbox.prop('checked', !checkbox.prop('checked'));
    }
    $(document).ready(function () {
        $('.card').click(function () {
            $(this).toggleClass('selected'); // Toggle 'selected' class on click
            console.log("selected");
        });
    });
</script>


<!-- Room Details Section End -->
